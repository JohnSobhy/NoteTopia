import org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
//    id 'com.google.gms.google-services'
}

android {
    namespace 'com.john_halaka.noteTopia'
    compileSdk 34

    defaultConfig {
        applicationId "com.john_halaka.noteTopia"
        minSdk 24
        targetSdk 34
        // latest version 7 (sort menu, and views menu updated)
        versionCode 8
        versionName "1.6"
        buildConfigField("String", "API_KEY", API_KEY)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    tasks.withType(KaptGenerateStubs).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    buildFeatures {
        compose true
        buildConfig true
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation('androidx.appcompat:appcompat:1.6.1')
    implementation libs.androidx.core.ktx
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.9.0')
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform('androidx.compose:compose-bom:2023.06.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform('androidx.compose:compose-bom:2023.06.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // implementation "androidx.compose.material:material-icons-extended:2.6.1"


// Compose dependencies
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.hilt.navigation.compose

    // Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    //Dagger - Hilt
    implementation libs.hilt.android
    kapt libs.hilt.android.compiler

    kapt libs.androidx.hilt.compiler

    // Room
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler

    // sharedPref
    implementation libs.androidx.datastore.preferences


    // Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx

    // Retrofit for network requests
    implementation libs.retrofit
    implementation libs.converter.gson
    // implementation 'com.squareup.okhttp3:4.9.0'
    implementation libs.androidx.runtime.livedata


    implementation libs.material

    implementation("androidx.compose.material3:material3-window-size-class")

    // locking and biometrics support
    implementation libs.androidx.biometric
    implementation libs.androidx.security.crypto

//// Import the Firebase BoM
//    implementation platform('com.google.firebase:firebase-bom:32.2.3')
//
//
//    // TODO: Add the dependencies for Firebase products you want to use
//    // When using the BoM, don't specify versions in Firebase dependencies
//    implementation 'com.google.firebase:firebase-analytics-ktx'


    //RichTextEditor
    implementation(libs.richeditor.compose)
    implementation(libs.androidx.material.icons.extended)

    implementation(libs.color)
    implementation(libs.input)

    // color picker
    implementation libs.colorpicker.compose

}
// Allow references to generated code
kapt {
    correctErrorTypes true
}
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        languageVersion = "1.9"
    }
}